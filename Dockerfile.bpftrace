FROM alpine:3.8 as builder
ENV STATIC_LINKING=ON
ENV RUN_TESTS=0 
RUN apk add --update \
  bison \
  build-base \
  clang-dev \
  clang-static \
  cmake \
  elfutils-dev \
  flex-dev \
  git \
  linux-headers \
  llvm5-dev \
  llvm5-static \
  zlib-dev

# Put LLVM directories where CMake expects them to be
RUN ln -s /usr/lib/cmake/llvm5 /usr/lib/cmake/llvm
RUN ln -s /usr/include/llvm5/llvm /usr/include/llvm
RUN ln -s /usr/include/llvm5/llvm-c /usr/include/llvm-c

WORKDIR /

RUN git clone https://github.com/iovisor/bpftrace.git /bpftrace

WORKDIR /bpftrace

RUN git checkout 2ae2a53f62622631a304def6c193680e603994e3

WORKDIR /bpftrace/docker

RUN chmod +x build.sh
RUN ./build.sh /bpftrace/build-release Release

FROM golang:1.11.4-alpine3.8 as gobuilder

RUN apk update
RUN apk add make

ADD . /go/src/github.com/fntlnz/kubectl-trace
WORKDIR /go/src/github.com/fntlnz/kubectl-trace

RUN make _output/bin/trace-runner

FROM alpine:3.8

RUN mkdir /lib64 && ln -s /lib/libc.musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2
COPY --from=builder /bpftrace/build-release/src/bpftrace /bin/bpftrace
COPY --from=gobuilder /go/src/github.com/fntlnz/kubectl-trace/_output/bin/trace-runner /bin/trace-runner

ENTRYPOINT ["/bin/trace-runner"]
